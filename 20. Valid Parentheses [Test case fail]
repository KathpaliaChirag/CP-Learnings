Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.


My Solution:
class Solution {
public:
    bool isValid(string s) {
        int c1=0,d=0;
        int len = s.length();
        for(int i =0; i<len; i++)
        {
            if(s[i]=='(')
            c1++;
            else if(s[i]==')' && c1!=0)
            c1--;
            else if(s[i]==')' && c1==0)
            {
                d=1;
                break;
            }
        }
        c1=0;
        if(d==1)
        return false;
        for(int i =0; i<len; i++)
        {
            if(s[i]=='{')
            c1++;
            else if(s[i]=='}' && c1!=0)
            c1--;
            else if(s[i]=='}' && c1==0)
            {
                d=1;
                break;
            }
        }
        c1=0;
        if(d==1)
        return false;
        for(int i =0; i<len; i++)
        {
            if(s[i]=='[')
            c1++;
            else if(s[i]==']' && c1!=0)
            c1--;
            else if(s[i]==']' && c1==0)
            {
                d=1;
                break;
            }
        }
        if(d==1)
        return false;

        return true;
        
    }
};
